import tensorflow as tf
from tensorflow.keras.preprocessing.image import ImageDataGenerator, load_img, img_to_array
import os
from tqdm import tqdm   # progress bar

# ======================
# ржЖржкржирж╛рж░ dataset ржПрж░ path
# ======================
input_dir = r"C:\Users\neonk\Downloads\M\Dataset"   # ржЖрж╕рж▓ dataset
output_dir = r"E:\New dataset"                      # ржирждрзБржи augmented dataset

# ржЖржЙржЯржкрзБржЯ ржлрзЛрж▓рзНржбрж╛рж░ рждрзИрж░рж┐
os.makedirs(output_dir, exist_ok=True)

# ======================
# Augmentation рж╕рзЗржЯрж┐ржВрж╕
# ======================
datagen = ImageDataGenerator(
    rotation_range=30,
    width_shift_range=0.2,
    height_shift_range=0.2,
    shear_range=0.2,
    zoom_range=0.2,
    horizontal_flip=True,
    fill_mode="nearest"
)

# ======================
# Augmentation ржкрзНрж░рж╕рзЗрж╕
# ======================
for class_name in os.listdir(input_dir):
    class_path = os.path.join(input_dir, class_name)
    
    if os.path.isdir(class_path):  # рж╢рзБржзрзБржорж╛рждрзНрж░ ржлрзЛрж▓рзНржбрж╛рж░ ржирж┐рж▓рзЗ
        save_class_dir = os.path.join(output_dir, class_name)
        os.makedirs(save_class_dir, exist_ok=True)
        
        print(f"\nЁЯУВ Processing Class: {class_name} ...")
        
        # tqdm ржжрж┐рзЯрзЗ progress bar
        for img_name in tqdm(os.listdir(class_path), desc=f"{class_name} images"):
            img_path = os.path.join(class_path, img_name)
            
            try:
                img = load_img(img_path)
                x = img_to_array(img)
                x = x.reshape((1,) + x.shape)

                i = 0
                for batch in datagen.flow(
                    x,
                    batch_size=1,
                    save_to_dir=save_class_dir,  # class ржЕржирзБржпрж╛рзЯрзА рж╕рзЗржн рж╣ржмрзЗ
                    save_prefix="aug",
                    save_format="jpg"
                ):
                    i += 1
                    if i >= 5:   # ржкрзНрж░рждрж┐ржЯрж┐ ржЫржмрж┐рж░ ржЬржирзНржп ржХрзЯржЯрж╛ augmented ржХржкрж┐ ржЪрж╛ржи
                        break
            except Exception as e:
                print(f"тЪая╕П Error with {img_path}: {e}")

print("\nтЬЕ Augmentation Complete! Data saved to:", output_dir)
